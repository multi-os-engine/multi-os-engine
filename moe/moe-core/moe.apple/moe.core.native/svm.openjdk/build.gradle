import org.moe.prebuilts.XcodeBuild
import org.moe.prebuilts.Script

task('jdk_gensrc', type: Script) {
    progress 'Fetching boot JDK'
    rawWorkDir file('../../../../../svm/mx').absolutePath
    exec './mx',
            '-y', '--no-warning',
            'fetch-jdk',
            '--java-distribution', 'labsjdk-ce-11',
            '--to', file('build/jdk').absolutePath,
            '--alias', 'jdk11'

    progress 'Configure'
    rawWorkDir file('../../../../../svm/labs-openjdk-11').absolutePath
    exec './build_labsjdk.py',
            '--configure-only',
            '--boot-jdk', file('build/jdk/jdk11/Contents/Home').absolutePath

    progress 'Gensrc'
    exec 'make',
            'java.base-libs', 'jdk.crypto.ec-libs'
}

XcodeBuild.createTask(project, "libjava", "ios", "iphoneos", "Debug")
        .cond_buildopt(buildfilter.ios.archs, "ARCHS")
        .cond_buildopt(buildfilter.ios.archs != null, "ONLY_ACTIVE_ARCH", "YES")
        .dependsOn('jdk_gensrc')
XcodeBuild.createTask(project, "libjava", "ios", "iphoneos", "Release")
        .cond_buildopt(buildfilter.ios.archs, "ARCHS")
        .cond_buildopt(buildfilter.ios.archs != null, "ONLY_ACTIVE_ARCH", "YES")
        .dependsOn('jdk_gensrc')
XcodeBuild.createTask(project, "libjava", "ios", "iphonesimulator", "Debug")
        .cond_buildopt(buildfilter.ios.archs, "ARCHS")
        .cond_buildopt(buildfilter.ios.archs != null, "ONLY_ACTIVE_ARCH", "YES")
        .dependsOn('jdk_gensrc')
XcodeBuild.createTask(project, "libjava", "ios", "iphonesimulator", "Release")
        .cond_buildopt(buildfilter.ios.archs, "ARCHS")
        .cond_buildopt(buildfilter.ios.archs != null, "ONLY_ACTIVE_ARCH", "YES")
        .dependsOn('jdk_gensrc')
