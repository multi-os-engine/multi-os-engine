/*
Copyright 2014-2016 Intel Corporation

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


apply plugin: 'java'

sourceSets {
    core {
        java {

        }
        resources {
            srcDirs = java.srcDirs
        }
    }
}

tasks.compileCoreJava.sourceCompatibility = "1.8"
tasks.compileCoreJava.targetCompatibility = "1.8"

// Don't run tests with the built-in junit
test { exclude '**' }

/******************************************************************************
 * Core Jar Generation
 ******************************************************************************/

task coreJar(type: Jar, dependsOn: compileCoreJava) {
    baseName 'moe-core'

    from sourceSets.core.output
    from { [rootProject.file('LICENSE'), rootProject.file('NOTICE')] }
    destinationDir file('build/libs/core')
    from(file('../eula/LICENSE.TXT')) { into 'META-INF' }
}

task coreSourcesJar(type: Jar, dependsOn: compileCoreJava) {
    baseName 'moe-core'
    classifier 'sources'

    from rootProject.file('LICENSE'), rootProject.file('NOTICE')
    from sourceSets.core.allJava
    destinationDir file('build/libs/core')
    from(file('../eula/LICENSE.TXT')) { into 'META-INF' }
}

def javaDocTitle = "moe.ios.core API"

/******************************************************************************
 * Core Javadoc Jar Generation
 ******************************************************************************/

task coreJavadoc(type: Javadoc) {
    title = javaDocTitle
    source sourceSets.core.allJava
    destinationDir = file('build/docs/coreJavadoc')
    include "**/*.java"
    options.addStringOption('Xdoclint:none', '-quiet')
}

task coreJavadocJar(type: Jar, dependsOn: coreJavadoc) {
    baseName 'moe-core'
    classifier 'javadoc'

    from coreJavadoc.destinationDir
    from { [rootProject.file('LICENSE'), rootProject.file('NOTICE')] }
    destinationDir file('build/libs/core')
    from(file('../eula/LICENSE.TXT')) { into 'META-INF' }
}

artifacts {
    archives coreJar
    archives coreSourcesJar
    archives coreJavadocJar
}
