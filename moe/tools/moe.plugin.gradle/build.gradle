/*
Copyright (C) 2016 Migeran

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

plugins {
    id "com.jfrog.bintray" version "1.7"
}

if (name != 'moe-gradle') {
    throw new GradleException('Incorrect name')
}
group 'org.multi-os-engine'

String loadPluginVersion() {
    final Properties props = new Properties()
    props.load(new FileInputStream(file('src/main/resources/org/moe/gradle/moe.properties')))
    return props.getProperty('MOE-Plugin-Version')
}

version loadPluginVersion()

apply plugin: 'java'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    included
}

dependencies {
    compile gradleApi()

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'com.jcraft', name: 'jsch', version: '0.1.53'

    compile group: 'org.ow2.asm', name: 'asm', version: '5.1'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile gradleTestKit()

    compileOnly project(':moe.tools.common')
    compileOnly project(':moe.document.pbxproj')
    compileOnly project(':moe.generator.project')

    included project(':moe.tools.common')
    included project(':moe.document.pbxproj')
    included project(':moe.generator.project')
}

tasks.test.dependsOn ':moe-sdk:devsdk'

bintray {
    if (project.hasProperty('bintray.user')) {
        user = property('bintray.user')
    }
    if (project.hasProperty('bintray.key')) {
        key = property('bintray.key')
    }

    publications = ['mavenJava']

    pkg {
        repo = 'maven'
        name = 'moe-gradle'
        userOrg = 'multi-os-engine'
        websiteUrl = 'https://multi-os-engine.org'
        vcsUrl = 'https://github.com/multi-os-engine/moe-plugin-gradle'
        licenses = ['Apache-2.0']
        labels = ['moe', 'multi-os-engine']
        publicDownloadNumbers = false

        publish = true

        version {
            name = project.version
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact(javadocJar)
            artifact(sourceJar)
            group project.group
            artifactId 'moe-gradle'
            version project.version
        }
    }
}

jar {
    from { configurations.included.collect { it.isDirectory() ? it : zipTree(it) } }
}

// Write the plugin's classpath to a file to share with the tests
task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = (sourceSets.main.runtimeClasspath + configurations.included).join("\n")
        file("$outputDir/plugin-sdk-localbuild.txt").text = project(':moe-sdk').file('build/dev-sdk')
    }
}

// Add the classpath file to the test runtime classpath
dependencies {
    testRuntime files(createClasspathManifest)
}
