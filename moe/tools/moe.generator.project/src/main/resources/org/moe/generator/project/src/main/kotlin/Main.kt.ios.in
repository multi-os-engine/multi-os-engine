import Pointer
import Generated
import RegisterOnStartup
import Selector

import ios.NSObject
import ios.foundation.NSDictionary
import ios.uikit.UIAlertView
import ios.uikit.UIApplication
import ios.uikit.UIScreen
import ios.uikit.UIViewController
import ios.uikit.UIWindow
import ios.uikit.c.UIKit
import ios.uikit.protocol.UIApplicationDelegate

@RegisterOnStartup
class Main protected constructor(peer: Pointer) : NSObject(peer), UIApplicationDelegate {

    private var window: UIWindow? = null

    override fun applicationDidFinishLaunchingWithOptions(application: UIApplication?, launchOptions: NSDictionary<*, *>?): Boolean {
        window = UIWindow.alloc().initWithFrame(UIScreen.mainScreen().bounds())

        val controller = UIViewController.alloc().init()
        window!!.setRootViewController(controller)

        window!!.makeKeyAndVisible()

        val alert = UIAlertView.alloc().init()
        alert.setMessage("Hello MOE!")
        alert.show()

        return true
    }

    override fun setWindow(value: UIWindow?) {
        window = value
    }

    override fun window(): UIWindow? {
        return window
    }

    companion object {

        @JvmStatic fun main(args: Array<String>) {
            UIKit.UIApplicationMain(0, null, null, Main::class.java.name)
        }

        @Selector("alloc")
        @JvmStatic external fun alloc(): Main
    }
}
