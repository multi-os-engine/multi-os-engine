/*
Copyright (C) 2016 Migeran

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package org.moe.editors;

import java.util.ArrayList;
import java.util.List;

public class Framework {

    public static String ACCELERATE = "Accelerate.framework";
    public static String ACCOUNTS = "Accounts.framework";
    public static String ADDRESS_BOOK = "AddressBook.framework";
    public static String ADDRESS_BOOK_UI = "AddressBookUI.framework";
    public static String AD_SUPPORT = "AdSupport.framework";
    public static String ASSETS_LIBRARY = "AssetsLibrary.framework";
    public static String AUDIO_TOOLBOX = "AudioToolbox.framework";
    public static String AUDIO_UNIT = "AudioUnit.framework";
    public static String AV_FOUNDATION = "AVFoundation.framework";
    public static String AV_KIT = "AVKit.framework";
    public static String CF_NETWORK = "CFNetwork.framework";
    public static String CLOUD_KIT = "CloudKit.framework";
    public static String CONTACTS = "Contacts.framework";
    public static String CONTACTS_UI = "ContactsUI.framework";
    public static String CORE_AUDIO = "CoreAudio.framework";
    public static String CORE_AUDIO_KIT = "CoreAudioKit.framework";
    public static String CORE_BLUETOOTH = "CoreBluetooth.framework";
    public static String CORE_DATA = "CoreData.framework";
    public static String CORE_FOUNDATION = "CoreFoundation.framework";
    public static String CORE_GRAPHICS = "CoreGraphics.framework";
    public static String CORE_IMAGE = "CoreImage.framework";
    public static String CORE_LOCATION = "CoreLocation.framework";
    public static String CORE_MEDIA = "CoreMedia.framework";
    public static String CORE_MIDI = "CoreMIDI.framework";
    public static String CORE_MOTION = "CoreMotion.framework";
    public static String CORE_SPOTLIGHT = "CoreSpotlight.framework";
    public static String CORE_TELEPHONY = "CoreTelephony.framework";
    public static String CORE_TEXT = "CoreText.framework";
    public static String CORE_VIDEO = "CoreVideo.framework";
    public static String EVENT_KIT = "EventKit.framework";
    public static String EVENT_KIT_UI = "EventKitUI.framework";
    public static String EXTERNAL_ACCESSORY = "ExternalAccessory.framework";
    public static String FOUNDATION = "Foundation.framework";
    public static String GAME_CONTOLLER = "GameController.framework";
    public static String GAME_KIT = "GameKit.framework";
    public static String GAMEPLAY_KIT = "GameplayKit.framework";
    public static String GL_KIT = "GLKit.framework";
    public static String GSS = "GSS.framework";
    public static String HEALT_KIT = "HealthKit.framework";
    public static String HEALT_KIT_UI = "HealthKitUI.framework";
    public static String HOME_KIT = "HomeKit.framework";
    public static String IAD = "iAd.framework";
    public static String IAMGE_IO = "ImageIO.framework";
    public static String IO_KIT = "IOKit.framework";
    public static String JAVA_SCRIPT_CORE = "JavaScriptCore.framework";
    public static String LOCAL_AUTHENTICATION = "LocalAuthentication.framework";
    public static String MAP_KIT = "MapKit.framework";
    public static String MEDIA_ACCESSIBILITY = "MediaAccessibility.framework";
    public static String MEDIA_PLAYER = "MediaPlayer.framework";
    public static String MEDIA_TOOLBOX = "MediaToolbox.framework";
    public static String MESSAGE_UI = "MessageUI.framework";
    public static String METAL = "Metal.framework";
    public static String METAL_KIT = "MetalKit.framework";
    public static String METAL_PERFORMANCE_SHADERS = "MetalPerformanceShaders.framework";
    public static String MOBILE_CORE_SERVICES = "MobileCoreServices.framework";
    public static String MODEL_IO = "ModelIO.framework";
    public static String MULTIPEER_CONNECTIVITY = "MultipeerConnectivity.framework";
    public static String NETWORK_EXTENSIONS = "NetworkExtension.framework";
    public static String NEWSSTAND_KIT = "NewsstandKit.framework";
    public static String NOTIFICATION_CENTER = "NotificationCenter.framework";
    public static String OPEN_AL = "OpenAL.framework";
    public static String OPEN_GLES = "OpenGLES.framework";
    public static String PASS_KIT = "PassKit.framework";
    public static String PHOTOS = "Photos.framework";
    public static String PHOTOS_UI = "PhotosUI.framework";
    public static String PUSH_KIT = "PushKit.framework";
    public static String QUARTZ_CORE = "QuartzCore.framework";
    public static String QUICK_LOCK = "QuickLook.framework";
    public static String REPLAY_KIT = "ReplayKit.framework";
    public static String SAFARI_SERVICE = "SafariServices.framework";
    public static String SCENE_KIT = "SceneKit.framework";
    public static String SECURITY = "Security.framework";
    public static String SOCIAL = "Social.framework";
    public static String SPRITE_KIT = "SpriteKit.framework";
    public static String STORE_KIT = "StoreKit.framework";
    public static String SYSTEM_CONFIGURATION = "SystemConfiguration.framework";
    public static String TWITTER = "Twitter.framework";
    public static String UI_KIT = "UIKit.framework";
    public static String VIDEO_TOOLBOX = "VideoToolbox.framework";
    public static String WATCH_CONNECTIVITY = "WatchConnectivity.framework";
    public static String WATCH_KIT = "WatchKit.framework";
    public static String WEB_KIT = "WebKit.framework";

    public static String CARRIER_BUNDLE_UTILITIES = "CarrierBundleUtilities.tbd";
    public static String IOABP_LIB = "IOABPLib.tbd";
    public static String LIB_ACCESSIBILITY = "libAccessibility.tbd";
    public static String LIB_ACMOBILESHIM = "libacmobileshim.tbd";
    public static String LIB_AFC = "libafc.tbd";
    public static String LIB_AM_SUPPORT = "libamsupport.tbd";
    public static String LIB_APP_PATCH = "libAppPatch.tbd";
    public static String LIB_ARCHIVE_2 = "libarchive.2.tbd";
    public static String LIB_ARCHIVE = "libarchive.tbd";
    public static String LIB_ASSERTION = "libassertion_launchd.tbd";
    public static String LIB_AUTHINSTALL = "libauthinstall.tbd";
    public static String LIB_AWD_PROTOBUF = "libAWDProtobuf.tbd";
    public static String LIB_AWD_PROTOBUF_AWD = "libAWDProtobufAWD.tbd";
    public static String LIB_AWD_PROTOBUF_BLUETOOTH = "libAWDProtobufBluetooth.tbd";
    public static String LIB_AWD_PROTOBUF_CATM = "libAWDProtobufCATM.tbd";
    public static String LIB_AWD_PROTOBUF_FACETIME = "libAWDProtobufFacetime.tbd";
    public static String LIB_AWD_PROTOBUF_FACETIME_MESSAGE = "libAWDProtobufFacetimeiMessage.tbd";
    public static String LIB_AWD_PROTOBUF_GCK = "libAWDProtobufGCK.tbd";
    public static String LIB_AWD_PROTOBUF_LOCATION = "libAWDProtobufLocation.tbd";
    public static String LIB_AWD_PROTOBUF_TELEPHONY = "libAWDProtobufTelephony.tbd";
    public static String LIB_AWD_SUPPORT = "libAWDSupport.tbd";
    public static String LIB_AWD_SUPPORT_CONFIG = "libAWDSupportConfig.tbd";
    public static String LIB_AWD_SUPPORT_FRAMEWORK = "libAWDSupportFramework.tbd";
    public static String LIB_AWD_SUPPORT_INFO = "libAWDSupportInfo.tbd";
    public static String LIB_AX_SAFE_CATEGORY_BUNDLE = "libAXSafeCategoryBundle.tbd";
    public static String LIB_AX_SPEECH_MANAGER = "libAXSpeechManager.tbd";
    public static String LIB_BASEBAND_MANAGER = "libBasebandManager.tbd";
    public static String LIB_BASEBAND_PCI = "libBasebandPCI.tbd";
    public static String LIB_BASEBAND_USB = "libBasebandUSB.tbd";
    public static String LIB_BB_UPDATER_DYNAMIC = "libBBUpdaterDynamic.tbd";
    public static String LIB_BSM_0 = "libbsm.0.tbd";
    public static String LIB_BSM = "libbsm.tbd";
    public static String LIB_BZ2_1_0 = "libbz2.1.0.tbd";
    public static String LIB_BZ2 = "libbz2.tbd";
    public static String LIB_CXX_1 = "libc++.1.tbd";
    public static String LIB_CXX = "libc++.tbd";
    public static String LIB_CXXABI = "libc++abi.tbd";
    public static String LIB_C = "libc.tbd";
    public static String LIB_CHARSET_1_0_0 = "libcharset.1.0.0.tbd";
    public static String LIB_CHARSET_1 = "libcharset.1.tbd";
    public static String LIB_CHARSET = "libcharset.tbd";
    public static String LIB_CHINESE_TOKENIZER = "libChineseTokenizer.tbd";
    public static String LIB_CMPH = "libcmph.tbd";
    public static String LIB_COMPRESSION = "libcompression.tbd";
    public static String LIB_COREROUTINE = "libcoreroutine.tbd";
    public static String LIB_CRF_SUITE = "libCRFSuite.tbd";
    public static String LIB_CRF_SUITE_0_12 = "libCRFSuite0.12.tbd";
    public static String LIB_CT_LOG_HELPER = "libCTLogHelper.tbd";
    public static String LIB_CT_WAKE_COMMAND_PARSER_DYNAMIC = "libCTWakeCommandParserDynamic.tbd";
    public static String LIB_CUPOLICY = "libcupolicy.tbd";
    public static String LIB_CURSES = "libcurses.tbd";
    public static String LIB_DBM = "libdbm.tbd";
    public static String LIB_DHCP_SERVER_A = "libDHCPServer.A.tbd";
    public static String LIB_DHCP_SERVER = "libDHCPServer.tbd";
    public static String LIB_DL = "libdl.tbd";
    public static String LIB_DNS_SERVICES = "libdns_services.tbd";
    public static String LIB_EDIT_2 = "libedit.2.tbd";
    public static String LIB_EDIT_3_0 = "libedit.3.0.tbd";
    public static String LIB_EDIT_3 = "libedit.3.tbd";
    public static String LIB_EDIT = "libedit.tbd";
    public static String LIB_ENERGYTRACE = "libenergytrace.tbd";
    public static String LIB_ETLDIAG_LOGGING_DYNAMIC = "libETLDIAGLoggingDynamic.tbd";
    public static String LIB_ETLDLF_DYNAMIC = "libETLDLFDynamic.tbd";
    public static String LIB_ETLDLOAD_CORE_DUMP_DYNAMIC = "libETLDLOADCoreDumpDynamic.tbd";
    public static String LIB_ETLDLOAD_DYNAMIC = "libETLDLOADDynamic.tbd";
    public static String LIB_ETLDMC_DYNAMIC = "libETLDMCDynamic.tbd";
    public static String LIB_ETL_DYNAMIC = "libETLDynamic.tbd";
    public static String LIB_ETLEFS_DUMP_DYNAMIC = "libETLEFSDumpDynamic.tbd";
    public static String LIB_ETLSA_DYNAMIC = "libETLSAHDynamic.tbd";
    public static String LIB_ETLT_TRANSPORT_DYNAMIC = "libETLTransportDynamic.tbd";
    public static String LIB_XSLT_0 = "libexslt.0.tbd";
    public static String LIB_XSLT = "libexslt.tbd";
    public static String LIB_EXTENSION = "libextension.tbd";
    public static String LIB_FORM_5_4 = "libform.5.4.tbd";
    public static String LIB_FORM = "libform.tbd";
    public static String LIB_GCC = "libgcc_s.1.tbd";
    public static String LIB_GERMANTOK = "libgermantok.tbd";
    public static String LIB_GETURE_SERVER = "libGestureServer.tbd";
    public static String LIB_GLL = "libgll.tbd";
    public static String LIB_H5_DYNAMIC = "libH5Dynamic.tbd";
    public static String LIB_HDLC_DYNAMIC = "libHDLCDynamic.tbd";
    public static String LIB_HEIMDAL_ASN1 = "libheimdal-asn1.tbd";
    public static String LIB_ICONV_2_4_0 = "libiconv.2.4.0.tbd";
    public static String LIB_ICONV_2 = "libiconv.2.tbd";
    public static String LIB_ICONV = "libiconv.tbd";
    public static String LIB_ICUCORE_A = "libicucore.A.tbd";
    public static String LIB_ICUCORE = "libicucore.tbd";
    public static String LIB_INFIELD_COLLECTION = "libInFieldCollection.tbd";
    public static String LIB_INFO = "libinfo.tbd";
    public static String LIB_IO_ACCESSORY_MANAGER = "libIOAccessoryManager.tbd";
    public static String LIB_IPCONFIG = "libipconfig.tbd";
    public static String LIB_IPSEC_A = "libipsec.A.tbd";
    public static String LIB_IPSEC = "libipsec.tbd";
    public static String LIB_LANGID = "liblangid.tbd";
    public static String LIB_LOCKDOWN = "liblockdown.tbd";
    public static String LIB_LZMA_5 = "liblzma.5.tbd";
    public static String LIB_LZMA = "liblzma.tbd";
    public static String LIB_M = "libm.tbd";
    public static String LIB_MARISA = "libmarisa.tbd";
    public static String LIB_MATCH_1 = "libMatch.1.tbd";
    public static String LIB_MATCH = "libMatch.tbd";
    public static String LIB_MAV_IPC_ROUTER_DYNAMIC = "libmav_ipc_router_dynamic.tbd";
    public static String LIB_MECAB_EM = "libmecab_em.tbd";
    public static String LIB_MECABRA = "libmecabra.tbd";
    public static String LIB_MIS = "libmis.tbd";
    public static String LIB_MOBILE_CHECKPOINT = "libMobileCheckpoint.tbd";
    public static String LIB_MOBILE_GESTALT = "libMobileGestalt.tbd";
    public static String LIB_MOBILEGESTALT_EXTENSIONS = "libMobileGestaltExtensions.tbd";
    public static String LIB_NCURSES_5_4 = "libncurses.5.4.tbd";
    public static String LIB_NCURSES = "libncurses.tbd";
    public static String LIB_NETWORK = "libnetwork.tbd";
    public static String LIB_NFSHARED = "libnfshared.tbd";
    public static String LIB_OBJC_A = "libobjc.A.tbd";
    public static String LIB_OBJC = "libobjc.tbd";
    public static String LIB_OMADM = "libomadm.tbd";
    public static String LIB_POLL = "libpoll.tbd";
    public static String LIB_PPM = "libPPM.tbd";
    public static String LIB_PREQUELITE = "libprequelite.tbd";
    public static String LIB_PROC = "libproc.tbd";
    public static String LIB_PROTOBUF = "libprotobuf.tbd";
    public static String LIB_PTTHREAD = "libpthread.tbd";
    public static String LIB_QL_CHARTS = "libQLCharts.tbd";
    public static String LIB_RESOLV_9 = "libresolv.9.tbd";
    public static String LIB_RESOLV = "libresolv.tbd";
    public static String LIB_RPCSV = "librpcsvc.tbd";
    public static String LIB_SANDBOX_1 = "libsandbox.1.tbd";
    public static String LIB_SANDBOX = "libsandbox.tbd";
    public static String LIB_Sp = "libsp.tbd";
    public static String LIB_SQLITE3_0 = "libsqlite3.0.tbd";
    public static String LIB_SQLITE_3 = "libsqlite3.tbd";
    public static String LIB_STDCXX6_0_9 = "libstdc++.6.0.9.tbd";
    public static String LIB_STDCXX_6 = "libstdc++.6.tbd";
    public static String LIB_STDCXX = "libstdc++.tbd";
    public static String LIB_SYSTEM_B = "libSystem.B.tbd";
    public static String LIB_SYSTEM = "libSystem.tbd";
    public static String LIB_TELEPHONY_BASEBAND_BULK_USB_DYNAMIC = "libTelephonyBasebandBulkUSBDynamic.tbd";
    public static String LIB_TELEPHONY_BASE_DYNAMIC = "libTelephonyBasebandDynamic.tbd";
    public static String LIB_TELEPHONY_DEBUG_DYNAMIC = "libTelephonyDebugDynamic.tbd";
    public static String LIB_TELEPHONY_IOKIT_DYNAMIC = "libTelephonyIOKitDynamic.tbd";
    public static String LIB_TELEPHONY_PC_DYNAMIC = "libTelephonyPCIDynamic.tbd";
    public static String LIB_TELEPHONY_USB_DYNAMIC = "libTelephonyUSBDynamic.tbd";
    public static String LIB_TELEPHONY_UTIL_DYNAMIC = "libTelephonyUtilDynamic.tbd";
    public static String LIB_THAI_TOKENIZER = "libThaiTokenizer.tbd";
    public static String LIB_TIDY_A = "libtidy.A.tbd";
    public static String LIB_TIDY = "libtidy.tbd";
    public static String LIB_TZUPDATE = "libtzupdate.tbd";
    public static String LIB_UTIL = "libutil.tbd";
    public static String LIB_UTIL_1_0 = "libutil1.0.tbd";
    public static String LIB_WAPI = "libWAPI.tbd";
    public static String LIB_XML_2_2 = "libxml2.2.tbd";
    public static String LIB_XML_2 = "libxml2.tbd";
    public static String LIB_XSLT_1 = "libxslt.1.tbd";
    public static String LIB_Z_1_1_3 = "libz.1.1.3.tbd";
    public static String LIB_Z1_2_5 = "libz.1.2.5.tbd";
    public static String LIB_Z1 = "libz.1.tbd";
    public static String LIB_Z = "libz.tbd";

    public static final String SYSTEM_LIBRARY_FRAMEWORKS = "System/Library/Frameworks/";
    public static final String USR_LIB = "usr/lib/";
    public static final String SOOURCE_TREE = "SDKROOT";

    private String name;
    private String path;
    private String sourceTree;

    public Framework(String name, String path, String soourceTree) {
        this.name = name;
        this.path = path;
        this.sourceTree = soourceTree;
    }

    @Override
    public String toString() {
        return name;
    }

    public String getName() {
        return name;
    }

    public String getPath() {
        return path;
    }

    public String getSourceTree() {
        return sourceTree;
    }

    @Override
    public boolean equals(Object obj) {
        if (!(obj instanceof Framework)) {
            return false;
        }
        Framework framework = (Framework) obj;

        return framework.getName().equals(getName()) && framework.getPath().equals(getPath());
    }

    public static List<Framework> getFrameworks() {
        List<Framework> frameworks = new ArrayList<Framework>();
        frameworks.add(new Framework(ACCELERATE, SYSTEM_LIBRARY_FRAMEWORKS + ACCELERATE, SOOURCE_TREE));
        frameworks.add(new Framework(ACCOUNTS, SYSTEM_LIBRARY_FRAMEWORKS + ACCOUNTS, SOOURCE_TREE));
        frameworks.add(new Framework(ADDRESS_BOOK, SYSTEM_LIBRARY_FRAMEWORKS + ADDRESS_BOOK, SOOURCE_TREE));
        frameworks.add(new Framework(ADDRESS_BOOK_UI, SYSTEM_LIBRARY_FRAMEWORKS + ADDRESS_BOOK_UI, SOOURCE_TREE));
        frameworks.add(new Framework(AD_SUPPORT, SYSTEM_LIBRARY_FRAMEWORKS + AD_SUPPORT, SOOURCE_TREE));
        frameworks.add(new Framework(ASSETS_LIBRARY, SYSTEM_LIBRARY_FRAMEWORKS + ASSETS_LIBRARY, SOOURCE_TREE));
        frameworks.add(new Framework(AUDIO_TOOLBOX, SYSTEM_LIBRARY_FRAMEWORKS + AUDIO_TOOLBOX, SOOURCE_TREE));
        frameworks.add(new Framework(AUDIO_UNIT, SYSTEM_LIBRARY_FRAMEWORKS + AUDIO_UNIT, SOOURCE_TREE));
        frameworks.add(new Framework(AV_FOUNDATION, SYSTEM_LIBRARY_FRAMEWORKS + AV_FOUNDATION, SOOURCE_TREE));
        frameworks.add(new Framework(AV_KIT, SYSTEM_LIBRARY_FRAMEWORKS + AV_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(CF_NETWORK, SYSTEM_LIBRARY_FRAMEWORKS + CF_NETWORK, SOOURCE_TREE));
        frameworks.add(new Framework(CLOUD_KIT, SYSTEM_LIBRARY_FRAMEWORKS + CLOUD_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(CONTACTS, SYSTEM_LIBRARY_FRAMEWORKS + CONTACTS, SOOURCE_TREE));
        frameworks.add(new Framework(CONTACTS_UI, SYSTEM_LIBRARY_FRAMEWORKS + CONTACTS_UI, SOOURCE_TREE));
        frameworks.add(new Framework(CORE_AUDIO, SYSTEM_LIBRARY_FRAMEWORKS + CORE_AUDIO, SOOURCE_TREE));
        frameworks.add(new Framework(CORE_AUDIO_KIT, SYSTEM_LIBRARY_FRAMEWORKS + CORE_AUDIO_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(CORE_BLUETOOTH, SYSTEM_LIBRARY_FRAMEWORKS + CORE_BLUETOOTH, SOOURCE_TREE));
        frameworks.add(new Framework(CORE_DATA, SYSTEM_LIBRARY_FRAMEWORKS + CORE_DATA, SOOURCE_TREE));
        frameworks.add(new Framework(CORE_FOUNDATION, SYSTEM_LIBRARY_FRAMEWORKS + CORE_FOUNDATION, SOOURCE_TREE));
        frameworks.add(new Framework(CORE_GRAPHICS, SYSTEM_LIBRARY_FRAMEWORKS + CORE_GRAPHICS, SOOURCE_TREE));
        frameworks.add(new Framework(CORE_IMAGE, SYSTEM_LIBRARY_FRAMEWORKS + CORE_IMAGE, SOOURCE_TREE));
        frameworks.add(new Framework(CORE_LOCATION, SYSTEM_LIBRARY_FRAMEWORKS + CORE_LOCATION, SOOURCE_TREE));
        frameworks.add(new Framework(CORE_MEDIA, SYSTEM_LIBRARY_FRAMEWORKS + CORE_MEDIA, SOOURCE_TREE));
        frameworks.add(new Framework(CORE_MIDI, SYSTEM_LIBRARY_FRAMEWORKS + CORE_MIDI, SOOURCE_TREE));
        frameworks.add(new Framework(CORE_MOTION, SYSTEM_LIBRARY_FRAMEWORKS + CORE_MOTION, SOOURCE_TREE));
        frameworks.add(new Framework(CORE_SPOTLIGHT, SYSTEM_LIBRARY_FRAMEWORKS + CORE_SPOTLIGHT, SOOURCE_TREE));
        frameworks.add(new Framework(CORE_TELEPHONY, SYSTEM_LIBRARY_FRAMEWORKS + CORE_TELEPHONY, SOOURCE_TREE));
        frameworks.add(new Framework(CORE_TEXT, SYSTEM_LIBRARY_FRAMEWORKS + CORE_TEXT, SOOURCE_TREE));
        frameworks.add(new Framework(CORE_VIDEO, SYSTEM_LIBRARY_FRAMEWORKS + CORE_VIDEO, SOOURCE_TREE));
        frameworks.add(new Framework(EVENT_KIT, SYSTEM_LIBRARY_FRAMEWORKS + EVENT_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(EVENT_KIT_UI, SYSTEM_LIBRARY_FRAMEWORKS + EVENT_KIT_UI, SOOURCE_TREE));
        frameworks.add(new Framework(EXTERNAL_ACCESSORY, SYSTEM_LIBRARY_FRAMEWORKS + EXTERNAL_ACCESSORY, SOOURCE_TREE));
        frameworks.add(new Framework(FOUNDATION, SYSTEM_LIBRARY_FRAMEWORKS + FOUNDATION, SOOURCE_TREE));
        frameworks.add(new Framework(GAME_CONTOLLER, SYSTEM_LIBRARY_FRAMEWORKS + GAME_CONTOLLER, SOOURCE_TREE));
        frameworks.add(new Framework(GAME_KIT, SYSTEM_LIBRARY_FRAMEWORKS + GAME_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(GAMEPLAY_KIT, SYSTEM_LIBRARY_FRAMEWORKS + GAMEPLAY_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(GL_KIT, SYSTEM_LIBRARY_FRAMEWORKS + GL_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(GSS, SYSTEM_LIBRARY_FRAMEWORKS + GSS, SOOURCE_TREE));
        frameworks.add(new Framework(HEALT_KIT, SYSTEM_LIBRARY_FRAMEWORKS + HEALT_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(HEALT_KIT_UI, SYSTEM_LIBRARY_FRAMEWORKS + HEALT_KIT_UI, SOOURCE_TREE));
        frameworks.add(new Framework(HOME_KIT, SYSTEM_LIBRARY_FRAMEWORKS + HOME_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(IAD, SYSTEM_LIBRARY_FRAMEWORKS + IAD, SOOURCE_TREE));
        frameworks.add(new Framework(IAMGE_IO, SYSTEM_LIBRARY_FRAMEWORKS + IAMGE_IO, SOOURCE_TREE));
        frameworks.add(new Framework(IO_KIT, SYSTEM_LIBRARY_FRAMEWORKS + IO_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(JAVA_SCRIPT_CORE, SYSTEM_LIBRARY_FRAMEWORKS + JAVA_SCRIPT_CORE, SOOURCE_TREE));
        frameworks.add(new Framework(LOCAL_AUTHENTICATION, SYSTEM_LIBRARY_FRAMEWORKS + LOCAL_AUTHENTICATION, SOOURCE_TREE));
        frameworks.add(new Framework(MAP_KIT, SYSTEM_LIBRARY_FRAMEWORKS + MAP_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(MEDIA_ACCESSIBILITY, SYSTEM_LIBRARY_FRAMEWORKS + MEDIA_ACCESSIBILITY, SOOURCE_TREE));
        frameworks.add(new Framework(MEDIA_PLAYER, SYSTEM_LIBRARY_FRAMEWORKS + MEDIA_PLAYER, SOOURCE_TREE));
        frameworks.add(new Framework(MEDIA_TOOLBOX, SYSTEM_LIBRARY_FRAMEWORKS + MEDIA_TOOLBOX, SOOURCE_TREE));
        frameworks.add(new Framework(MESSAGE_UI, SYSTEM_LIBRARY_FRAMEWORKS + MESSAGE_UI, SOOURCE_TREE));
        frameworks.add(new Framework(METAL, SYSTEM_LIBRARY_FRAMEWORKS + METAL, SOOURCE_TREE));
        frameworks.add(new Framework(METAL_KIT, SYSTEM_LIBRARY_FRAMEWORKS + METAL_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(METAL_PERFORMANCE_SHADERS, SYSTEM_LIBRARY_FRAMEWORKS + METAL_PERFORMANCE_SHADERS, SOOURCE_TREE));
        frameworks.add(new Framework(MOBILE_CORE_SERVICES, SYSTEM_LIBRARY_FRAMEWORKS + MOBILE_CORE_SERVICES, SOOURCE_TREE));
        frameworks.add(new Framework(MODEL_IO, SYSTEM_LIBRARY_FRAMEWORKS + MODEL_IO, SOOURCE_TREE));
        frameworks.add(new Framework(MULTIPEER_CONNECTIVITY, SYSTEM_LIBRARY_FRAMEWORKS + MULTIPEER_CONNECTIVITY, SOOURCE_TREE));
        frameworks.add(new Framework(NETWORK_EXTENSIONS, SYSTEM_LIBRARY_FRAMEWORKS + NETWORK_EXTENSIONS, SOOURCE_TREE));
        frameworks.add(new Framework(NEWSSTAND_KIT, SYSTEM_LIBRARY_FRAMEWORKS + NEWSSTAND_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(NOTIFICATION_CENTER, SYSTEM_LIBRARY_FRAMEWORKS + NOTIFICATION_CENTER, SOOURCE_TREE));
        frameworks.add(new Framework(OPEN_AL, SYSTEM_LIBRARY_FRAMEWORKS + OPEN_AL, SOOURCE_TREE));
        frameworks.add(new Framework(OPEN_GLES, SYSTEM_LIBRARY_FRAMEWORKS + OPEN_GLES, SOOURCE_TREE));
        frameworks.add(new Framework(PASS_KIT, SYSTEM_LIBRARY_FRAMEWORKS + PASS_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(PHOTOS, SYSTEM_LIBRARY_FRAMEWORKS + PHOTOS, SOOURCE_TREE));
        frameworks.add(new Framework(PHOTOS_UI, SYSTEM_LIBRARY_FRAMEWORKS + PHOTOS_UI, SOOURCE_TREE));
        frameworks.add(new Framework(PUSH_KIT, SYSTEM_LIBRARY_FRAMEWORKS + PUSH_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(QUARTZ_CORE, SYSTEM_LIBRARY_FRAMEWORKS + QUARTZ_CORE, SOOURCE_TREE));
        frameworks.add(new Framework(QUICK_LOCK, SYSTEM_LIBRARY_FRAMEWORKS + QUICK_LOCK, SOOURCE_TREE));
        frameworks.add(new Framework(REPLAY_KIT, SYSTEM_LIBRARY_FRAMEWORKS + REPLAY_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(SAFARI_SERVICE, SYSTEM_LIBRARY_FRAMEWORKS + SAFARI_SERVICE, SOOURCE_TREE));
        frameworks.add(new Framework(SCENE_KIT, SYSTEM_LIBRARY_FRAMEWORKS + SCENE_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(SECURITY, SYSTEM_LIBRARY_FRAMEWORKS + SECURITY, SOOURCE_TREE));
        frameworks.add(new Framework(SOCIAL, SYSTEM_LIBRARY_FRAMEWORKS + SOCIAL, SOOURCE_TREE));
        frameworks.add(new Framework(SPRITE_KIT, SYSTEM_LIBRARY_FRAMEWORKS + SPRITE_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(STORE_KIT, SYSTEM_LIBRARY_FRAMEWORKS + STORE_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(SYSTEM_CONFIGURATION, SYSTEM_LIBRARY_FRAMEWORKS + SYSTEM_CONFIGURATION, SOOURCE_TREE));
        frameworks.add(new Framework(TWITTER, SYSTEM_LIBRARY_FRAMEWORKS + TWITTER, SOOURCE_TREE));
        frameworks.add(new Framework(UI_KIT, SYSTEM_LIBRARY_FRAMEWORKS + UI_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(VIDEO_TOOLBOX, SYSTEM_LIBRARY_FRAMEWORKS + VIDEO_TOOLBOX, SOOURCE_TREE));
        frameworks.add(new Framework(WATCH_CONNECTIVITY, SYSTEM_LIBRARY_FRAMEWORKS + WATCH_CONNECTIVITY, SOOURCE_TREE));
        frameworks.add(new Framework(WATCH_KIT, SYSTEM_LIBRARY_FRAMEWORKS + WATCH_KIT, SOOURCE_TREE));
        frameworks.add(new Framework(WEB_KIT, SYSTEM_LIBRARY_FRAMEWORKS + WEB_KIT, SOOURCE_TREE));

        frameworks.add(new Framework(CARRIER_BUNDLE_UTILITIES, USR_LIB + CARRIER_BUNDLE_UTILITIES, SOOURCE_TREE));
        frameworks.add(new Framework(IOABP_LIB, USR_LIB + IOABP_LIB, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ACCESSIBILITY, USR_LIB + LIB_ACCESSIBILITY, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ACMOBILESHIM, USR_LIB + LIB_ACMOBILESHIM, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AFC, USR_LIB + LIB_AFC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AM_SUPPORT, USR_LIB + LIB_AM_SUPPORT, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_APP_PATCH, USR_LIB + LIB_APP_PATCH, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ARCHIVE_2, USR_LIB + LIB_ARCHIVE_2, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ARCHIVE, USR_LIB + LIB_ARCHIVE, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ASSERTION, USR_LIB + LIB_ASSERTION, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AUTHINSTALL, USR_LIB + LIB_AUTHINSTALL, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AWD_PROTOBUF, USR_LIB + LIB_AWD_PROTOBUF, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AWD_PROTOBUF_AWD, USR_LIB + LIB_AWD_PROTOBUF_AWD, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AWD_PROTOBUF_BLUETOOTH, USR_LIB + LIB_AWD_PROTOBUF_BLUETOOTH, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AWD_PROTOBUF_CATM, USR_LIB + LIB_AWD_PROTOBUF_CATM, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AWD_PROTOBUF_FACETIME, USR_LIB + LIB_AWD_PROTOBUF_FACETIME, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AWD_PROTOBUF_FACETIME_MESSAGE, USR_LIB + LIB_AWD_PROTOBUF_FACETIME_MESSAGE, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AWD_PROTOBUF_GCK, USR_LIB + LIB_AWD_PROTOBUF_GCK, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AWD_PROTOBUF_LOCATION, USR_LIB + LIB_AWD_PROTOBUF_LOCATION, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AWD_PROTOBUF_TELEPHONY, USR_LIB + LIB_AWD_PROTOBUF_TELEPHONY, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AWD_SUPPORT, USR_LIB + LIB_AWD_SUPPORT, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AWD_SUPPORT_CONFIG, USR_LIB + LIB_AWD_SUPPORT_CONFIG, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AWD_SUPPORT_FRAMEWORK, USR_LIB + LIB_AWD_SUPPORT_FRAMEWORK, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AWD_SUPPORT_INFO, USR_LIB + LIB_AWD_SUPPORT_INFO, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AX_SAFE_CATEGORY_BUNDLE, USR_LIB + LIB_AX_SAFE_CATEGORY_BUNDLE, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_AX_SPEECH_MANAGER, USR_LIB + LIB_AX_SPEECH_MANAGER, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_BASEBAND_MANAGER, USR_LIB + LIB_BASEBAND_MANAGER, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_BASEBAND_PCI, USR_LIB + LIB_BASEBAND_PCI, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_BASEBAND_USB, USR_LIB + LIB_BASEBAND_USB, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_BB_UPDATER_DYNAMIC, USR_LIB + LIB_BB_UPDATER_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_BSM_0, USR_LIB + LIB_BSM_0, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_BSM, USR_LIB + LIB_BSM, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_BZ2_1_0, USR_LIB + LIB_BZ2_1_0, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_BZ2, USR_LIB + LIB_BZ2, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_CXX_1, USR_LIB + LIB_CXX_1, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_CXX, USR_LIB + LIB_CXX, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_CXXABI, USR_LIB + LIB_CXXABI, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_C, USR_LIB + LIB_C, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_CHARSET_1_0_0, USR_LIB + LIB_CHARSET_1_0_0, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_CHARSET_1, USR_LIB + LIB_CHARSET_1, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_CHARSET, USR_LIB + LIB_CHARSET, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_CHINESE_TOKENIZER, USR_LIB + LIB_CHINESE_TOKENIZER, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_CMPH, USR_LIB + LIB_CMPH, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_COMPRESSION, USR_LIB + LIB_COMPRESSION, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_COREROUTINE, USR_LIB + LIB_COREROUTINE, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_CRF_SUITE, USR_LIB + LIB_CRF_SUITE, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_CRF_SUITE_0_12, USR_LIB + LIB_CRF_SUITE_0_12, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_CT_LOG_HELPER, USR_LIB + LIB_CT_LOG_HELPER, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_CT_WAKE_COMMAND_PARSER_DYNAMIC, USR_LIB + LIB_CT_WAKE_COMMAND_PARSER_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_CUPOLICY, USR_LIB + LIB_CUPOLICY, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_CURSES, USR_LIB + LIB_CURSES, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_DBM, USR_LIB + LIB_DBM, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_DHCP_SERVER_A, USR_LIB + LIB_DHCP_SERVER_A, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_DHCP_SERVER, USR_LIB + LIB_DHCP_SERVER, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_DL, USR_LIB + LIB_DL, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_DNS_SERVICES, USR_LIB + LIB_DNS_SERVICES, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_EDIT_2, USR_LIB + LIB_EDIT_2, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_EDIT_3_0, USR_LIB + LIB_EDIT_3_0, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_EDIT_3, USR_LIB + LIB_EDIT_3, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_EDIT, USR_LIB + LIB_EDIT, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ENERGYTRACE, USR_LIB + LIB_ENERGYTRACE, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ETLDIAG_LOGGING_DYNAMIC, USR_LIB + LIB_ETLDIAG_LOGGING_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ETLDLF_DYNAMIC, USR_LIB + LIB_ETLDLF_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ETLDLOAD_CORE_DUMP_DYNAMIC, USR_LIB + LIB_ETLDLOAD_CORE_DUMP_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ETLDLOAD_DYNAMIC, USR_LIB + LIB_ETLDLOAD_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ETLDMC_DYNAMIC, USR_LIB + LIB_ETLDMC_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ETL_DYNAMIC, USR_LIB + LIB_ETL_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ETLEFS_DUMP_DYNAMIC, USR_LIB + LIB_ETLEFS_DUMP_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ETLSA_DYNAMIC, USR_LIB + LIB_ETLSA_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ETLT_TRANSPORT_DYNAMIC, USR_LIB + LIB_ETLT_TRANSPORT_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_XSLT_0, USR_LIB + LIB_XSLT_0, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_XSLT, USR_LIB + LIB_XSLT, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_EXTENSION, USR_LIB + LIB_EXTENSION, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_FORM_5_4, USR_LIB + LIB_FORM_5_4, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_FORM, USR_LIB + LIB_FORM, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_GCC, USR_LIB + LIB_GCC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_GERMANTOK, USR_LIB + LIB_GERMANTOK, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_GETURE_SERVER, USR_LIB + LIB_GETURE_SERVER, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_GLL, USR_LIB + LIB_GLL, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_H5_DYNAMIC, USR_LIB + LIB_H5_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_HDLC_DYNAMIC, USR_LIB + LIB_HDLC_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_HEIMDAL_ASN1, USR_LIB + LIB_HEIMDAL_ASN1, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ICONV_2_4_0, USR_LIB + LIB_ICONV_2_4_0, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ICONV_2, USR_LIB + LIB_ICONV_2, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ICONV, USR_LIB + LIB_ICONV, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ICUCORE_A, USR_LIB + LIB_ICUCORE_A, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_ICUCORE, USR_LIB + LIB_ICUCORE, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_INFIELD_COLLECTION, USR_LIB + LIB_INFIELD_COLLECTION, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_INFO, USR_LIB + LIB_INFO, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_IO_ACCESSORY_MANAGER, USR_LIB + LIB_IO_ACCESSORY_MANAGER, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_IPCONFIG, USR_LIB + LIB_IPCONFIG, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_IPSEC_A, USR_LIB + LIB_IPSEC_A, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_IPSEC, USR_LIB + LIB_IPSEC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_LANGID, USR_LIB + LIB_LANGID, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_LOCKDOWN, USR_LIB + LIB_LOCKDOWN, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_LZMA_5, USR_LIB + LIB_LZMA_5, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_LZMA, USR_LIB + LIB_LZMA, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_M, USR_LIB + LIB_M, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_MARISA, USR_LIB + LIB_MARISA, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_MATCH_1, USR_LIB + LIB_MATCH_1, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_MATCH, USR_LIB + LIB_MATCH, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_MAV_IPC_ROUTER_DYNAMIC, USR_LIB + LIB_MAV_IPC_ROUTER_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_MECAB_EM, USR_LIB + LIB_MECAB_EM, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_MECABRA, USR_LIB + LIB_MECABRA, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_MIS, USR_LIB + LIB_MIS, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_MOBILE_CHECKPOINT, USR_LIB + LIB_MOBILE_CHECKPOINT, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_MOBILE_GESTALT, USR_LIB + LIB_MOBILE_GESTALT, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_MOBILEGESTALT_EXTENSIONS, USR_LIB + LIB_MOBILEGESTALT_EXTENSIONS, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_NCURSES_5_4, USR_LIB + LIB_NCURSES_5_4, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_NCURSES, USR_LIB + LIB_NCURSES, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_NETWORK, USR_LIB + LIB_NETWORK, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_NFSHARED, USR_LIB + LIB_NFSHARED, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_OBJC_A, USR_LIB + LIB_OBJC_A, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_OBJC, USR_LIB + LIB_OBJC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_OMADM, USR_LIB + LIB_OMADM, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_POLL, USR_LIB + LIB_POLL, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_PPM, USR_LIB + LIB_PPM, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_PREQUELITE, USR_LIB + LIB_PREQUELITE, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_PROC, USR_LIB + LIB_PROC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_PROTOBUF, USR_LIB + LIB_PROTOBUF, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_PTTHREAD, USR_LIB + LIB_PTTHREAD, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_QL_CHARTS, USR_LIB + LIB_QL_CHARTS, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_RESOLV_9, USR_LIB + LIB_RESOLV_9, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_RESOLV, USR_LIB + LIB_RESOLV, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_RPCSV, USR_LIB + LIB_RPCSV, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_SANDBOX_1, USR_LIB + LIB_SANDBOX_1, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_SANDBOX, USR_LIB + LIB_SANDBOX, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_Sp, USR_LIB + LIB_Sp, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_SQLITE3_0, USR_LIB + LIB_SQLITE3_0, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_SQLITE_3, USR_LIB + LIB_SQLITE_3, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_STDCXX6_0_9, USR_LIB + LIB_STDCXX6_0_9, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_STDCXX_6, USR_LIB + LIB_STDCXX_6, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_STDCXX, USR_LIB + LIB_STDCXX, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_SYSTEM_B, USR_LIB + LIB_SYSTEM_B, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_SYSTEM, USR_LIB + LIB_SYSTEM, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_TELEPHONY_BASEBAND_BULK_USB_DYNAMIC, USR_LIB + LIB_TELEPHONY_BASEBAND_BULK_USB_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_TELEPHONY_BASE_DYNAMIC, USR_LIB + LIB_TELEPHONY_BASE_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_TELEPHONY_DEBUG_DYNAMIC, USR_LIB + LIB_TELEPHONY_DEBUG_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_TELEPHONY_IOKIT_DYNAMIC, USR_LIB + LIB_TELEPHONY_IOKIT_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_TELEPHONY_PC_DYNAMIC, USR_LIB + LIB_TELEPHONY_PC_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_TELEPHONY_USB_DYNAMIC, USR_LIB + LIB_TELEPHONY_USB_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_TELEPHONY_UTIL_DYNAMIC, USR_LIB + LIB_TELEPHONY_UTIL_DYNAMIC, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_THAI_TOKENIZER, USR_LIB + LIB_THAI_TOKENIZER, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_TIDY_A, USR_LIB + LIB_TIDY_A, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_TIDY, USR_LIB + LIB_TIDY, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_TZUPDATE, USR_LIB + LIB_TZUPDATE, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_UTIL, USR_LIB + LIB_UTIL, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_UTIL_1_0, USR_LIB + LIB_UTIL_1_0, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_WAPI, USR_LIB + LIB_WAPI, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_XML_2_2, USR_LIB + LIB_XML_2_2, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_XML_2, USR_LIB + LIB_XML_2, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_XSLT_1, USR_LIB + LIB_XSLT_1, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_Z_1_1_3, USR_LIB + LIB_Z_1_1_3, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_Z1_2_5, USR_LIB + LIB_Z1_2_5, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_Z1, USR_LIB + LIB_Z1, SOOURCE_TREE));
        frameworks.add(new Framework(LIB_Z, USR_LIB + LIB_Z, SOOURCE_TREE));
        return frameworks;

    }
}
